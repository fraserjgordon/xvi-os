library("Utility")
{
    library_name    = "System.C++.Utility"
    library_version = "0.1.0"

    define_header_target = true
    use_stdlib = false

    header_deps =
    [
        "../Allocator",
        "../Atomic",
        "../Core:Core_headers",
        "../LanguageSupport:LanguageSupport_headers",
        "../String",
        "../TypeTraits",

        "//C/LanguageSupport",
    ]

    public_headers =
    [
        "Abs.hh",
        "Algorithm.hh",
        "Allocator.hh",
        "AllocatorTraits.hh",
        "Any.hh",
        "Array.hh",
        "Bind.hh",
        "Bit.hh",
        "Bitset.hh",
        "CharTraits.hh",
        "Chrono.hh",
        "ContainerUtils.hh",
        "DefaultDelete.hh",
        "ErrorCodes.hh",
        "ExecutionPolicy.hh",
        "Expected.hh",
        "Function.hh",
        "FunctionalUtils.hh",
        "Hash.hh",
        "IntegerCompare.hh",
        "IntegerSequence.hh",
        "Invoke.hh",
        "IosFwd.hh",
        "Iterator.hh",
        "MBState.hh",
        "Memory.hh",
        "MemoryAlgorithms.hh",
        "Numeric.hh",
        "Optional.hh",
        "OutPtr.hh",
        "Pair.hh",
        "PointerTraits.hh",
        "Ranges.hh",
        "RangesAlgorithm.hh",
        "RangesUtils.hh",
        "RangesViews.hh",
        "Ratio.hh",
        "ReferenceWrapper.hh",
        "Scope.hh",
        "ScopedAllocator.hh",
        "StdLib.hh",
        "SharedPtr.hh",
        "Span.hh",
        "StdExcept.hh",
        "String.hh",
        "StringFwd.hh",
        "StringView.hh",
        "Swap.hh",
        "SystemError.hh",
        "Tuple.hh",
        "TypeIndex.hh",
        "UniquePtr.hh",
        "Variant.hh",

        "Private/AddressOf.hh",
        "Private/Concepts.hh",
        "Private/Config.hh",
        "Private/InPlace.hh",
        "Private/Namespace.hh",
        "Private/TupleTraits.hh",
    ]

    test_sources =
    [
    ]
}
