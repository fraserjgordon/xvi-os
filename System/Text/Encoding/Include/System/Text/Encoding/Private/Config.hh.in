#pragma once
#ifndef __SYSTEM_TEXT_ENCODING_PRIVATE_CONFIG_H
#define __SYSTEM_TEXT_ENCODING_PRIVATE_CONFIG_H


#if !defined(__SYSTEM_TEXT_ENCODING_ENABLE_UTF8)
#  define __SYSTEM_TEXT_ENCODING_ENABLE_UTF8        1
#endif

#if !defined(__SYSTEM_TEXT_ENCODING_ENABLE_UTF16)
#  define __SYSTEM_TEXT_ENCODING_ENABLE_UTF16       1
#endif

#if !defined(__SYSTEM_TEXT_ENCODING_ENABLE_UTF32)
#  define __SYSTEM_TEXT_ENCODING_ENABLE_UTF32       1
#endif


#define __SYSTEM_TEXT_ENCODING_VERSION_MAJOR       @SYSTEM_TEXT_ENCODING_VERSION_MAJOR@
#define __SYSTEM_TEXT_ENCODING_VERSION_MINOR       @SYSTEM_TEXT_ENCODING_VERSION_MINOR@
#define __SYSTEM_TEXT_ENCODING_VERSION_REVISION    @SYSTEM_TEXT_ENCODING_VERSION_REVISION@


#if __SYSTEM_TEXT_ENCODING_BUILD_SHARED
#  define __SYSTEM_TEXT_ENCODING_EXPORT     [[gnu::visibility("protected")]]
#elif __SYSTEM_TEXT_ENCODING_BUILD_STATIC
#  define __SYSTEM_TEXT_ENCODING_EXPORT     /**/
#else
#  define __SYSTEM_TEXT_ENCODING_EXPORT     /**/
#endif

#define __SYSTEM_TEXT_ENCODING_STRINGIFY_(x)    #x
#define __SYSTEM_TEXT_ENCODING_STRINGIFY(x)     __SYSTEM_TEXT_ENCODING_STRINGIFY_(x)
#define __SYSTEM_TEXT_ENCODING_SYMBOL(x)  asm("System.Text.Encoding." #x)
    //; asm(".symver " #x "," #x "@@VERSION_" __SYSTEM_TEXT_ENCODING_STRINGIFY(__SYSTEM_TEXT_ENCODING_VERSION_MAJOR) "." __SYSTEM_TEXT_ENCODING_STRINGIFY(__SYSTEM_TEXT_ENCODING_VERSION_MINOR))


#endif /* ifndef __SYSTEM_TEXT_ENCODING_PRIVATE_CONFIG_H */
